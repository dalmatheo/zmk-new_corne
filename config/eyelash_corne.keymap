#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&soft_off { hold-time-ms = <2000>; };

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESC  &kp Q  &kp W  &kp F  &kp P      &kp B                             &kp UP                &kp J      &kp L  &kp U         &kp Y    &kp APOSTROPHE  &kp BSPC
&kp TAB  &kp A  &kp R  &kp S  &kp T      &kp G                   &kp LEFT  &kp ENTER  &kp RIGHT  &kp M      &kp N  &kp E         &kp I    &kp O           &trans
&trans   &kp Z  &kp X  &kp C  &kp D      &kp V      &kp SPACE              &kp DOWN              &kp K      &kp H  &kp COMMA     &kp DOT  &kp FSLH        &trans
                       &mo 1  &kp LCTRL  &kp SPACE                                               &kp ENTER  &mo 2  &kp LEFT_GUI
            >;

            sensor-bindings = <&inc_dec_kp RIGHT_BRACKET LEFT_BRACKET>;
            label = "MAIN";
        };

        lower_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp PIPE   &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp TILDE                                  &mmv MOVE_UP                     &kp CARET      &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp GRAVE        &trans
&trans  &kp MINUS  &kp ASTERISK      &kp EQUAL       &kp UNDERSCORE        &kp DOLLAR                 &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp HASH       &kp AMPERSAND          &kp SEMICOLON    &kp COLON          &kp EXCLAMATION  &trans
&trans  &none      &none             &none           &kp PLUS              &kp PERCENT  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp BACKSLASH  &kp AT                 &none            &none              &none            &trans
                                     &trans          &trans                &trans                                                                      &trans         &trans                 &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "NUMBER";
            bindings = <
&trans      &kp F1        &kp F2        &kp F3             &kp F4  &kp F5                            &mmv MOVE_UP                     &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &trans
&trans      &kp N1        &kp N2        &kp N3             &kp N4  &kp N5            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0   &bt BT_NXT
&bt BT_CLR  &out OUT_USB  &out OUT_BLE  &ext_power EP_TOG  &none   &trans  &trans                    &mmv MOVE_DOWN                   &trans  &trans  &trans  &trans  &trans   &bt BT_PRV
                                        &trans             &trans  &trans                                                             &trans  &trans  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
